name: Build and Deploy to AWS ECS and ESR

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run against'
        type: environment
        required: true
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

env:
  AWS_REGION: ${{ vars.MY_AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.MY_ECR_REPO }}
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: 'Docker Build'
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:aws-webapi-sample"
          push: false
          tags: 'web-api-image:latest'
          outputs: type=docker,dest=/tmp/web-api-image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-api-image
          path: /tmp/web-api-image.tar
  test:
    runs-on: ubuntu-latest
    needs: build
    environment: test
    steps:
      -
        name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          aws-region: ${{ env.AWS_REGION }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: web-api-image
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/web-api-image.tar
          docker image ls -a
      - 
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - 
        name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: 'latest'
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker image tag web-api-image:latest $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
  